@* Author: *@
@* Souvik Das  *@
@* Assistant Programmer, BCC *@
@* BSc in CSE, BUET *@
@* PhD Candidate in CS, Texas A&M University *@

@model X.PagedList.StaticPagedList<ProjectCompletionReport.Models.Project>
@using X.PagedList.Mvc.Core;

@{
    ViewData["Title"] = "All Projects";
    int[] pageSizes = new[] { 10, 20, 50, 100 };
    int currentPageSize = ViewBag.PageSize ?? 10;
}

<div class="container mt-5">
    <h2>All Projects</h2>
    <hr />
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["SuccessMessage"]
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @TempData["ErrorMessage"]
        </div>
    }

    <!-- Search Bar -->
    <form method="get" asp-route="/ViewProject" class="mb-4">
        <div class="input-group">
            <input type="text" name="searchString" class="form-control" placeholder="Search by project name" value="@ViewBag.SearchString" />
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </form>

    <!-- Projects Table -->
    <div id="projects-table">
        @Html.Partial("_ProjectsTable", Model)
    </div>

    <!-- Entries Per Page and Pagination -->
    <div class="d-flex justify-content-between align-items-center mt-3">
        <!-- Show Entries Per Page (Left) -->
        <form method="get" asp-route="/ViewProject" class="d-flex align-items-center">
            <input type="hidden" name="searchString" value="@ViewBag.SearchString" />
            <input type="hidden" name="page" value="@Model.PageNumber" />
            <label class="me-2" for="pageSize">Show entries:</label>
            <select name="pageSize" id="pageSize" class="form-select w-auto" onchange="this.form.submit()">
                @foreach (var size in pageSizes)
                {
                    if (size == currentPageSize)
                    {
                        <option value="@size" selected>@size</option>
                    }
                    else
                    {
                        <option value="@size">@size</option>
                    }
                }
            </select>
        </form>

        <!-- Pagination (Right) -->
        <nav aria-label="Page navigation">
            @Html.PagedListPager(Model, page => Url.Action("Index", "ViewProject", new { page, pageSize = ViewBag.PageSize, searchString = ViewBag.SearchString }),
                     new PagedListRenderOptions
            {
                UlElementClasses = new[] { "pagination", "mb-0" },
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" },
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always
            })
        </nav>
    </div>
</div>

<style>
    .custom-table {
        border-collapse: separate;
        border-spacing: 0;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        border-radius: 0.25rem;
        overflow: hidden;
    }

        .custom-table th,
        .custom-table td {
            vertical-align: middle;
            padding: 0.75rem;
        }

        .custom-table thead th {
            background-color: #343a40;
            color: white;
            border-bottom: 2px solid #dee2e6;
        }

        .custom-table tbody tr:hover {
            background-color: #f8f9fa;
            transition: background-color 0.2s ease-in-out;
        }

        .custom-table .badge {
            font-size: 0.9rem;
            padding: 0.35em 0.65em;
        }

        .custom-table .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
        }
</style>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>
    <script>
        function bindEvents() {
            $(".details-button").off("click").on("click", function (e) {
                e.stopPropagation();
                var projectId = $(this).data("id");
                viewDetails(projectId);
            });

            $(".delete-icon").off("click").on("click", function (e) {
                e.stopPropagation();
                var projectId = $(this).data("id");
                deleteProject(projectId);
            });

            $(".pagination a").off("click").on("click", function (e) {
                e.preventDefault();
                var url = $(this).attr("href");
                console.log("Pagination clicked, URL:", url);
                loadTable(url);
            });
        }

        function loadTable(url) {
            $.ajax({
                url: url,
                type: "GET",
                success: function (data) {
                    $("#projects-table").html(data);
                    bindEvents(); // Re-bind events after content update
                },
                error: function () {
                    alert("An error occurred while loading the page.");
                }
            });
        }

        function updatePageSize() {
            var pageSize = $("#pageSize").val();
            var url = "@Url.Action("Index", "ViewProject", new { page = 1 })" + "&pageSize=" + pageSize + "&searchString=" + "@ViewBag.SearchString";
            console.log("Page size changed, URL:", url);
            loadTable(url);
        }

        function viewDetails(projectId) {
            window.open("/ViewProject/Details/" + projectId, "_blank");
        }

        function deleteProject(projectId) {
            if (confirm("Are you sure you want to delete this project?")) {
                $.ajax({
                    url: "/ViewProject/Delete/" + projectId,
                    type: "POST",
                    data: { id: projectId },
                    success: function (response) {
                        console.log("Delete response:", response);
                        if (response.success) {
                            alert("Project deleted successfully.");
                            loadTable("@Url.Action("Index", "ViewProject", new { page = Model.PageNumber, pageSize = ViewBag.PageSize, searchString = ViewBag.SearchString })");
                        } else {
                            alert("Failed to delete the project: " + (response.message || "Unknown error"));
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Delete error:", error);
                        alert("An error occurred while deleting the project: " + error);
                    }
                });
            }
        }

        $(document).ready(function () {
            bindEvents();
        });
    </script>
}