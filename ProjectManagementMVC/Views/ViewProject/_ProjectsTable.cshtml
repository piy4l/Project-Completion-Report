@model X.PagedList.StaticPagedList<ProjectCompletionReport.Models.Project>
@using X.PagedList.Mvc.Core;

<style>
    .badge {
        padding: 5px 10px;
        border-radius: 5px;
        font-size: 0.9em;
    }

    .bg-success {
        background-color: #28a745;
        color: white;
    }

    .bg-danger {
        background-color: #dc3545;
        color: white;
    }

    .clickable-row {
        cursor: pointer;
    }

    .delete-icon {
        color: #dc3545;
        cursor: pointer;
        font-size: 1.2em;
    }

        .delete-icon:hover {
            color: #a71d2a;
        }

    .details-button {
        color: #007bff;
        cursor: pointer;
        font-size: 1.2em;
        margin-right: 10px;
    }

        .details-button:hover {
            color: #0056b3;
        }

    .pagination-container {
        margin-top: 20px;
        text-align: center;
    }
</style>

<div class="table-responsive">
    <table class="table table-striped table-hover table-bordered">
        <thead class="table-dark">
            <tr>
                <th scope="col">SL No.</th>
                <th scope="col">Name</th>
                <th scope="col">Budget</th>
                <th scope="col">Duration</th>
                <th scope="col">Status</th>
                <th scope="col">Action</th>
            </tr>
        </thead>
        <tbody>
            @{
                int slNo = (Model.PageNumber - 1) * Model.PageSize + 1;
            }
            @foreach (var project in Model)
            {
                <tr class="clickable-row" data-id="@project.ProjectId">
                    <td>@slNo</td>
                    <td>@project.Name</td>
                    <td>@project.Budget</td>
                    <td>@project.Duration</td>
                    <td>
                        <span class="badge @(project.Status == 0 ? "bg-success" : "bg-danger")">
                            @(project.Status == 0 ? "Active" : "Inactive")
                        </span>
                    </td>
                    <td>
                        <span class="details-button" data-id="@project.ProjectId">
                            <i class="fas fa-info-circle"></i>
                        </span>
                        <span class="delete-icon" data-id="@project.ProjectId">
                            <i class="fas fa-trash"></i>
                        </span>
                    </td>
                </tr>
                slNo++;
            }
        </tbody>
    </table>
</div>

<div class="pagination-container">
    <p class="text-muted">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount (Total: @Model.TotalItemCount)</p>
    <nav aria-label="Page navigation">
        @Html.PagedListPager(Model, page => Url.Action("Index", "ViewProject", new { page, pageSize = ViewBag.PageSize }),
                 new PagedListRenderOptions
        {
            UlElementClasses = new[] { "pagination", "justify-content-center" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Always
        })
    </nav>
</div>